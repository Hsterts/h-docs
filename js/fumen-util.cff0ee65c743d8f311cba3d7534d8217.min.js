colorMapping={S:7,J:6,T:5,Z:4,O:3,L:2,I:1},reverseMapping={7:4,4:7,6:2,2:6,5:5,3:3,1:1,0:0,8:8},reverseMappingLetters={L:"J",J:"L",S:"Z",Z:"S",T:"T",O:"O",I:"I"},reverseMappingRotation={spawn:"spawn",right:"left",reverse:"reverse",left:"right"};function mirrorFumen(n){var e=[],t=[];for(let t of n.split("	"))e.push(...t.split(/\s/));for(let n of e)try{let e=decoder.decode(n);for(let t=0;t<e.length;t++){toMirrorBoard=e[t]._field.field.pieces;for(let e=0;e<23;e++){row=toMirrorBoard.slice(e*10,(e+1)*10);for(let t=0;t<10;t++)toMirrorBoard[e*10+t]=reverseMapping[row[9-t]]}op=e[t].operation,op&&(op.type=reverseMappingLetters[op.type],op.x=9-op.x,"IO".includes(op.type)&&(op.rotation=="reverse"?op.x++:op.rotation=="left"&&op.type=="O"?op.x++:(op.rotation=="spawn"||op.type=="O")&&op.x--),"SZLJT".includes(op.type)&&(op.rotation=reverseMappingRotation[op.rotation]))}t.push(encoder.encode(e))}catch(e){console.log(n,e)}return t}function clearedOffset(t,e){for(let n of t)e>=n&&e++;return e}function unglueFumen(n){let s={T:[[[0,0],[0,-1],[0,1],[1,0]],[[0,0],[0,1],[1,0],[-1,0]],[[0,0],[0,-1],[0,1],[-1,0]],[[0,0],[0,-1],[1,0],[-1,0]]],I:[[[0,0],[0,-1],[0,1],[0,2]],[[0,0],[1,0],[-1,0],[-2,0]],[[0,0],[0,-1],[0,-2],[0,1]],[[0,0],[1,0],[2,0],[-1,0]]],L:[[[0,0],[0,-1],[0,1],[1,1]],[[0,0],[1,0],[-1,0],[-1,1]],[[0,0],[0,-1],[0,1],[-1,-1]],[[0,0],[1,-1],[1,0],[-1,0]]],J:[[[0,0],[0,-1],[0,1],[1,-1]],[[0,0],[1,0],[-1,0],[1,1]],[[0,0],[0,-1],[0,1],[-1,1]],[[0,0],[-1,-1],[1,0],[-1,0]]],S:[[[0,0],[0,-1],[1,0],[1,1]],[[0,0],[1,0],[0,1],[-1,1]],[[0,0],[0,1],[-1,0],[-1,-1]],[[0,0],[-1,0],[0,-1],[1,-1]]],Z:[[[0,0],[0,1],[1,0],[1,-1]],[[0,0],[-1,0],[0,1],[1,1]],[[0,0],[0,-1],[-1,0],[-1,1]],[[0,0],[1,0],[0,-1],[-1,-1]]],O:[[[0,0],[1,0],[0,1],[1,1]],[[0,0],[0,1],[-1,0],[-1,1]],[[0,0],[-1,0],[0,-1],[-1,-1]],[[0,0],[0,-1],[1,-1],[1,0]]]},o={spawn:0,right:1,reverse:2,left:3},i={S:7,J:6,T:5,Z:4,O:3,L:2,I:1};var e=[];let t=[];for(let t of n.split("	"))e.push(...t.split(/\s/));for(let n of e)try{let e=decoder.decode(n);toUnglueBoard=e[0]._field.field.pieces,rowsCleared=[];for(let t=0;t<e.length;t++){op=e[t].operation,piece=s[op.type][o[op.rotation]];for(let e of piece)yIndex=op.y+e[0],yIndex=clearedOffset(rowsCleared,yIndex),xIndex=op.x+e[1],index=yIndex*10+xIndex,toUnglueBoard[index]!=0&&console.log("error"),toUnglueBoard[index]=i[op.type];temp=[];for(let e=-2;e<3;e++)if(yIndex=op.y+e,yIndex=clearedOffset(rowsCleared,yIndex),yIndex>=0){rowCleared=!0;for(let e=0;e<10;e++)index=yIndex*10+e,rowCleared=rowCleared&&toUnglueBoard[index]!=0;rowCleared&&temp.push(yIndex)}for(let e of temp)rowsCleared.includes(e)||(rowsCleared.push(e),rowsCleared.sort())}let a=[e[0]];a[0].operation=void 0,a[0]._field.field.pieces=toUnglueBoard,t.push(encoder.encode(a))}catch(e){console.log(n,e)}return t.join(" ")}